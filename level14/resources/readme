level14@SnowCrash:~$ gdb getflag
	(gdb) break *0x08048990
	Breakpoint 1 at 0x8048990
	(gdb) r
	Starting program: /bin/getflag

	Breakpoint 1, 0x08048990 in main ()
	(gdb) jump *0x8048de5
	Continuing at 0x8048de5.
	7QiHafiNa3HVozsaXkawuYrTstxbpABHD8CPnHJ
	[Inferior 1 (process 10790) exited normally]
	(gdb) c
	The program is not being run.
	(gdb) q

level14@SnowCrash:~$ su flag14
	Password:
	Congratulation. Type getflag to get the key and send it to me the owner of this livecd :)

flag14@SnowCrash:~$ getflag
	Check flag.Here is your token : 7QiHafiNa3HVozsaXkawuYrTstxbpABHD8CPnHJ


############ 2
level14@SnowCrash:~$ gdb -q getflag
(gdb) disass main
Dump of assembler code for function main:
   0x08048946 <+0>:	push   %ebp
   0x08048947 <+1>:	mov    %esp,%ebp
   0x08048949 <+3>:	push   %ebx
   0x0804894a <+4>:	and    $0xfffffff0,%esp
   0x0804894d <+7>:	sub    $0x120,%esp
   0x08048953 <+13>:	mov    %gs:0x14,%eax
   0x08048959 <+19>:	mov    %eax,0x11c(%esp)
   0x08048960 <+26>:	xor    %eax,%eax
   0x08048962 <+28>:	movl   $0x0,0x10(%esp)
   0x0804896a <+36>:	movl   $0x0,0xc(%esp)
   0x08048972 <+44>:	movl   $0x1,0x8(%esp)
   0x0804897a <+52>:	movl   $0x0,0x4(%esp)
   0x08048982 <+60>:	movl   $0x0,(%esp)
   0x08048989 <+67>:	call   0x8048540 <ptrace@plt>
0x0804898e <+72>:	test   %eax,%eax
   0x08048990 <+74>:	jns    0x80489a8 <main+98>
   0x08048992 <+76>:	movl   $0x8048fa8,(%esp)
   0x08048999 <+83>:	call   0x80484e0 <puts@plt>
   0x0804899e <+88>:	mov    $0x1,%eax
   0x080489a3 <+93>:	jmp    0x8048eb2 <main+1388>
   0x080489a8 <+98>:	movl   $0x8048fc4,(%esp)
   0x080489af <+105>:	call   0x80484d0 <getenv@plt>
   0x080489b4 <+110>:	test   %eax,%eax
   0x080489b6 <+112>:	je     0x80489ea <main+164>
   0x080489b8 <+114>:	mov    0x804b040,%eax
   0x080489bd <+119>:	mov    %eax,%edx
   0x080489bf <+121>:	mov    $0x8048fd0,%eax
   0x080489c4 <+126>:	mov    %edx,0xc(%esp)
   0x080489c8 <+130>:	movl   $0x25,0x8(%esp)
   0x080489d0 <+138>:	movl   $0x1,0x4(%esp)
   0x080489d8 <+146>:	mov    %eax,(%esp)
   0x080489db <+149>:	call   0x80484c0 <fwrite@plt>
   0x080489e0 <+154>:	mov    $0x1,%eax
   0x080489e5 <+159>:	jmp    0x8048eb2 <main+1388>
   0x080489ea <+164>:	movl   $0x0,0x4(%esp)
   0x080489f2 <+172>:	movl   $0x8048ff6,(%esp)
   0x080489f9 <+179>:	call   0x8048500 <open@plt>
   0x080489fe <+184>:	test   %eax,%eax
   0x08048a00 <+186>:	jle    0x8048a34 <main+238>
   0x08048a02 <+188>:	mov    0x804b040,%eax
   0x08048a07 <+193>:	mov    %eax,%edx
   0x08048a09 <+195>:	mov    $0x8048fd0,%eax
   0x08048a0e <+200>:	mov    %edx,0xc(%esp)
   0x08048a12 <+204>:	movl   $0x25,0x8(%esp)
   0x08048a1a <+212>:	movl   $0x1,0x4(%esp)
   0x08048a22 <+220>:	mov    %eax,(%esp)
   0x08048a25 <+223>:	call   0x80484c0 <fwrite@plt>
   0x08048a2a <+228>:	mov    $0x1,%eax
   0x08048a2f <+233>:	jmp    0x8048eb2 <main+1388>
   0x08048a34 <+238>:	movl   $0x0,0x4(%esp)
   0x08048a3c <+246>:	movl   $0x8049009,(%esp)
   0x08048a43 <+253>:	call   0x804871c <syscall_open>
   0x08048a48 <+258>:	mov    %eax,0x14(%esp)
   0x08048a4c <+262>:	cmpl   $0xffffffff,0x14(%esp)
   0x08048a51 <+267>:	jne    0x8048e88 <main+1346>
   0x08048a57 <+273>:	mov    0x804b040,%eax
   0x08048a5c <+278>:	mov    %eax,%edx
   0x08048a5e <+280>:	mov    $0x804901c,%eax
---Type <return> to continue, or q <return> to quit---
   0x08048a63 <+285>:	mov    %edx,0xc(%esp)
   0x08048a67 <+289>:	movl   $0x46,0x8(%esp)
   0x08048a6f <+297>:	movl   $0x1,0x4(%esp)
   0x08048a77 <+305>:	mov    %eax,(%esp)
   0x08048a7a <+308>:	call   0x80484c0 <fwrite@plt>
   0x08048a7f <+313>:	mov    $0x1,%eax
   0x08048a84 <+318>:	jmp    0x8048eb2 <main+1388>
   0x08048a89 <+323>:	movl   $0x8049063,0x4(%esp)
   0x08048a91 <+331>:	lea    0x1c(%esp),%eax
   0x08048a95 <+335>:	mov    %eax,(%esp)
   0x08048a98 <+338>:	call   0x8048843 <isLib>
   0x08048a9d <+343>:	test   %eax,%eax
   0x08048a9f <+345>:	je     0x8048aae <main+360>
   0x08048aa1 <+347>:	movl   $0x1,0x10(%esp)
   0x08048aa9 <+355>:	jmp    0x8048e89 <main+1347>
   0x08048aae <+360>:	cmpl   $0x0,0x10(%esp)
   0x08048ab3 <+365>:	je     0x8048e89 <main+1347>
   0x08048ab9 <+371>:	movl   $0x8049068,0x4(%esp)
   0x08048ac1 <+379>:	lea    0x1c(%esp),%eax
   0x08048ac5 <+383>:	mov    %eax,(%esp)
   0x08048ac8 <+386>:	call   0x8048843 <isLib>
   0x08048acd <+391>:	test   %eax,%eax
   0x08048acf <+393>:	je     0x8048e46 <main+1280>
   0x08048ad5 <+399>:	mov    0x804b060,%eax
   0x08048ada <+404>:	mov    %eax,%edx
   0x08048adc <+406>:	mov    $0x804906c,%eax
   0x08048ae1 <+411>:	mov    %edx,0xc(%esp)
   0x08048ae5 <+415>:	movl   $0x20,0x8(%esp)
   0x08048aed <+423>:	movl   $0x1,0x4(%esp)
   0x08048af5 <+431>:	mov    %eax,(%esp)
   0x08048af8 <+434>:	call   0x80484c0 <fwrite@plt>
   0x08048afd <+439>:	call   0x80484b0 <getuid@plt>
   0x08048b02 <+444>:	mov    %eax,0x18(%esp)
   0x08048b06 <+448>:	mov    0x18(%esp),%eax
0x08048b0a <+452>:	cmp    $0xbbe,%eax
   0x08048b0f <+457>:	je     0x8048ccb <main+901>
   0x08048b15 <+463>:	cmp    $0xbbe,%eax
   0x08048b1a <+468>:	ja     0x8048b68 <main+546>
   0x08048b1c <+470>:	cmp    $0xbba,%eax
   0x08048b21 <+475>:	je     0x8048c3b <main+757>
   0x08048b27 <+481>:	cmp    $0xbba,%eax
   0x08048b2c <+486>:	ja     0x8048b4d <main+519>
   0x08048b2e <+488>:	cmp    $0xbb8,%eax
   0x08048b33 <+493>:	je     0x8048bf3 <main+685>
   0x08048b39 <+499>:	cmp    $0xbb8,%eax
   0x08048b3e <+504>:	ja     0x8048c17 <main+721>
   0x08048b44 <+510>:	test   %eax,%eax
   0x08048b46 <+512>:	je     0x8048bc6 <main+640>
   0x08048b48 <+514>:	jmp    0x8048e06 <main+1216>
   0x08048b4d <+519>:	cmp    $0xbbc,%eax
   0x08048b52 <+524>:	je     0x8048c83 <main+829>
   0x08048b58 <+530>:	cmp    $0xbbc,%eax
   0x08048b5d <+535>:	ja     0x8048ca7 <main+865>
   0x08048b63 <+541>:	jmp    0x8048c5f <main+793>
   0x08048b68 <+546>:	cmp    $0xbc2,%eax
   0x08048b6d <+551>:	je     0x8048d5b <main+1045>
   0x08048b73 <+557>:	cmp    $0xbc2,%eax
   0x08048b78 <+562>:	ja     0x8048b95 <main+591>
   0x08048b7a <+564>:	cmp    $0xbc0,%eax
---Type <return> to continue, or q <return> to quit---q
Quit
(gdb) b *0x08048b0a
Breakpoint 3 at 0x8048b0a
(gdb) r
Starting program: /bin/getflag

Breakpoint 2, 0x0804898e in main ()
(gdb) p $eax
$3 = -1
(gdb) p $eax=0
$4 = 0
(gdb) c
Continuing.

Breakpoint 3, 0x08048b0a in main ()
(gdb) p $eax
$5 = 2014
(gdb) p $eax=0xbc6
$6 = 3014
(gdb) c
Continuing.
Check flag.Here is your token : 7QiHafiNa3HVozsaXkawuYrTstxbpABHD8CPnHJ
[Inferior 1 (process 10998) exited normally]
